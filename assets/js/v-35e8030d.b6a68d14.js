"use strict";(self.webpackChunkvp=self.webpackChunkvp||[]).push([[44203],{77323:(e,t,i)=>{i.r(t),i.d(t,{data:()=>r});const r={key:"v-35e8030d",path:"/devices/EFEKTA_PWS.html",title:"Custom devices (DiY) EFEKTA_PWS control via MQTT",lang:"en-US",frontmatter:{title:"Custom devices (DiY) EFEKTA_PWS control via MQTT",description:"Integrate your Custom devices (DiY) EFEKTA_PWS via Zigbee2MQTT with whatever smart home infrastructure you are using without the vendors bridge or gateway.",addedAt:"2021-08-01T20:41:55.000Z",pageClass:"device-page"},excerpt:"",headers:[{level:2,title:"Notes",slug:"notes",children:[{level:3,title:"Build guide",slug:"build-guide",children:[]},{level:3,title:"Device type specific configuration",slug:"device-type-specific-configuration",children:[]}]},{level:2,title:"Exposes",slug:"exposes",children:[{level:3,title:"Soil_moisture (numeric)",slug:"soil-moisture-numeric",children:[]},{level:3,title:"Battery (numeric)",slug:"battery-numeric",children:[]},{level:3,title:"Temperature (numeric)",slug:"temperature-numeric",children:[]},{level:3,title:"Linkquality (numeric)",slug:"linkquality-numeric",children:[]}]}],filePathRelative:"devices/EFEKTA_PWS.md",git:{updatedTime:1635800594e3}}},8482:(e,t,i)=>{i.r(t),i.d(t,{default:()=>h});var r=i(66252);const o=(0,r.uE)('<h1 id="custom-devices-diy-efekta-pws" tabindex="-1"><a class="header-anchor" href="#custom-devices-diy-efekta-pws" aria-hidden="true">#</a> Custom devices (DiY) EFEKTA_PWS</h1><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>Model</td><td>EFEKTA_PWS</td></tr><tr><td>Vendor</td><td>Custom devices (DiY)</td></tr><tr><td>Description</td><td>[Plant Wattering Sensor]</td></tr><tr><td>Exposes</td><td>soil_moisture, battery, temperature, linkquality</td></tr><tr><td>Picture</td><td><img src="https://www.zigbee2mqtt.io/images/devices/EFEKTA_PWS.jpg" alt="Custom devices (DiY) EFEKTA_PWS"></td></tr></tbody></table><h2 id="notes" tabindex="-1"><a class="header-anchor" href="#notes" aria-hidden="true">#</a> Notes</h2><h3 id="build-guide" tabindex="-1"><a class="header-anchor" href="#build-guide" aria-hidden="true">#</a> Build guide</h3>',4),d=(0,r.Uk)("Instructions on how to build this device can be found "),a={href:"https://github.com/smartboxchannel/Plant-Watering-Sensor-Zigbee",target:"_blank",rel:"noopener noreferrer"},c=(0,r.Uk)("here"),n=(0,r._)("h3",{id:"device-type-specific-configuration",tabindex:"-1"},[(0,r._)("a",{class:"header-anchor",href:"#device-type-specific-configuration","aria-hidden":"true"},"#"),(0,r.Uk)(" Device type specific configuration")],-1),s=(0,r.Uk)("How to use device type specific configuration"),u=(0,r.uE)('<ul><li><code>temperature_precision</code>: Controls the precision of <code>temperature</code> values, e.g. <code>0</code>, <code>1</code> or <code>2</code>; default <code>2</code>. To control the precision based on the temperature value set it to e.g. <code>{30: 0, 10: 1}</code>, when temperature &gt;= 30 precision will be 0, when temperature &gt;= 10 precision will be 1. Precision will take into affect with next report of device.</li><li><code>temperature_calibration</code>: Allows to manually calibrate temperature values, e.g. <code>1</code> would add 1 degree to the temperature reported by the device; default <code>0</code>. Calibration will take into affect with next report of device.</li></ul><h2 id="exposes" tabindex="-1"><a class="header-anchor" href="#exposes" aria-hidden="true">#</a> Exposes</h2><h3 id="soil-moisture-numeric" tabindex="-1"><a class="header-anchor" href="#soil-moisture-numeric" aria-hidden="true">#</a> Soil_moisture (numeric)</h3><p>Measured soil moisture value. Value can be found in the published state on the <code>soil_moisture</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The unit of this value is <code>%</code>.</p><h3 id="battery-numeric" tabindex="-1"><a class="header-anchor" href="#battery-numeric" aria-hidden="true">#</a> Battery (numeric)</h3><p>Remaining battery in %. Value can be found in the published state on the <code>battery</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The minimal value is <code>0</code> and the maximum value is <code>100</code>. The unit of this value is <code>%</code>.</p><h3 id="temperature-numeric" tabindex="-1"><a class="header-anchor" href="#temperature-numeric" aria-hidden="true">#</a> Temperature (numeric)</h3><p>Measured temperature value. Value can be found in the published state on the <code>temperature</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The unit of this value is <code>Â°C</code>.</p><h3 id="linkquality-numeric" tabindex="-1"><a class="header-anchor" href="#linkquality-numeric" aria-hidden="true">#</a> Linkquality (numeric)</h3><p>Link quality (signal strength). Value can be found in the published state on the <code>linkquality</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The minimal value is <code>0</code> and the maximum value is <code>255</code>. The unit of this value is <code>lqi</code>.</p>',10),l={},h=(0,i(83744).Z)(l,[["render",function(e,t){const i=(0,r.up)("OutboundLink"),l=(0,r.up)("RouterLink");return(0,r.wg)(),(0,r.iD)(r.HY,null,[o,(0,r._)("p",null,[d,(0,r._)("a",a,[c,(0,r.Wm)(i)])]),n,(0,r._)("p",null,[(0,r._)("em",null,[(0,r.Wm)(l,{to:"/guide/configuration/devices-groups.html#specific-device-options"},{default:(0,r.w5)((()=>[s])),_:1})])]),u],64)}]])},83744:(e,t)=>{t.Z=(e,t)=>{for(const[i,r]of t)e[i]=r;return e}}}]);