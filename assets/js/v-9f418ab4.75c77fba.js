"use strict";(self.webpackChunkvp=self.webpackChunkvp||[]).push([[96295],{69909:(e,t,i)=>{i.r(t),i.d(t,{data:()=>r});const r={key:"v-9f418ab4",path:"/devices/DIYRuZ_RT.html",title:"DIYRuZ DIYRuZ_RT control via MQTT",lang:"en-US",frontmatter:{title:"DIYRuZ DIYRuZ_RT control via MQTT",description:"Integrate your DIYRuZ DIYRuZ_RT via Zigbee2MQTT with whatever smart home infrastructure you are using without the vendors bridge or gateway.",addedAt:"2020-06-27T13:26:08.000Z",pageClass:"device-page"},excerpt:"",headers:[{level:2,title:"Notes",slug:"notes",children:[]},{level:2,title:"Exposes",slug:"exposes",children:[{level:3,title:"Switch",slug:"switch",children:[]},{level:3,title:"Temperature (numeric)",slug:"temperature-numeric",children:[]},{level:3,title:"Linkquality (numeric)",slug:"linkquality-numeric",children:[]}]}],filePathRelative:"devices/DIYRuZ_RT.md",git:{updatedTime:1635800594e3}}},42315:(e,t,i)=>{i.r(t),i.d(t,{default:()=>_});var r=i(66252);const a=(0,r._)("h1",{id:"diyruz-diyruz-rt",tabindex:"-1"},[(0,r._)("a",{class:"header-anchor",href:"#diyruz-diyruz-rt","aria-hidden":"true"},"#"),(0,r.Uk)(" DIYRuZ DIYRuZ_RT")],-1),u=(0,r._)("thead",null,[(0,r._)("tr",null,[(0,r._)("th"),(0,r._)("th")])],-1),o=(0,r._)("tr",null,[(0,r._)("td",null,"Model"),(0,r._)("td",null,"DIYRuZ_RT")],-1),l=(0,r._)("tr",null,[(0,r._)("td",null,"Vendor"),(0,r._)("td",null,"DIYRuZ")],-1),d=(0,r._)("td",null,"Description",-1),n={href:"https://habr.com/ru/company/iobroker/blog/495926/",target:"_blank",rel:"noopener noreferrer"},s=(0,r.Uk)("DiY CC2530 Zigbee 3.0 firmware"),c=(0,r._)("tr",null,[(0,r._)("td",null,"Exposes"),(0,r._)("td",null,"switch (state), temperature, linkquality")],-1),h=(0,r._)("tr",null,[(0,r._)("td",null,"Picture"),(0,r._)("td",null,[(0,r._)("img",{src:"https://www.zigbee2mqtt.io/images/devices/DIYRuZ_RT.jpg",alt:"DIYRuZ DIYRuZ_RT"})])],-1),p=(0,r.uE)('<h2 id="notes" tabindex="-1"><a class="header-anchor" href="#notes" aria-hidden="true">#</a> Notes</h2><h2 id="exposes" tabindex="-1"><a class="header-anchor" href="#exposes" aria-hidden="true">#</a> Exposes</h2><h3 id="switch" tabindex="-1"><a class="header-anchor" href="#switch" aria-hidden="true">#</a> Switch</h3><p>The current state of this switch is in the published state under the <code>state</code> property (value is <code>ON</code> or <code>OFF</code>). To control this switch publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;state&quot;: &quot;ON&quot;}</code>, <code>{&quot;state&quot;: &quot;OFF&quot;}</code> or <code>{&quot;state&quot;: &quot;TOGGLE&quot;}</code>. To read the current state of this switch publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;state&quot;: &quot;&quot;}</code>.</p><h3 id="temperature-numeric" tabindex="-1"><a class="header-anchor" href="#temperature-numeric" aria-hidden="true">#</a> Temperature (numeric)</h3><p>Measured temperature value. Value can be found in the published state on the <code>temperature</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The unit of this value is <code>Â°C</code>.</p><h3 id="linkquality-numeric" tabindex="-1"><a class="header-anchor" href="#linkquality-numeric" aria-hidden="true">#</a> Linkquality (numeric)</h3><p>Link quality (signal strength). Value can be found in the published state on the <code>linkquality</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The minimal value is <code>0</code> and the maximum value is <code>255</code>. The unit of this value is <code>lqi</code>.</p>',8),m={},_=(0,i(83744).Z)(m,[["render",function(e,t){const i=(0,r.up)("OutboundLink");return(0,r.wg)(),(0,r.iD)(r.HY,null,[a,(0,r._)("table",null,[u,(0,r._)("tbody",null,[o,l,(0,r._)("tr",null,[d,(0,r._)("td",null,[(0,r._)("a",n,[s,(0,r.Wm)(i)])])]),c,h])]),p],64)}]])},83744:(e,t)=>{t.Z=(e,t)=>{for(const[i,r]of t)e[i]=r;return e}}}]);